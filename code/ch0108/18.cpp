/*
 * @Author: allen
 * @Date: 2023-08-11
 *
 * 18:肿瘤面积
 *
 * 总时间限制: 1000ms 内存限制: 65536kB
 *
 * 描述
 *     在一个正方形的灰度图片上，肿瘤是一块矩形的区域，肿瘤的边缘所在的像素点在图片中用0表示。其它肿瘤内和肿瘤外的点都用255表示。
 *     现在要求你编写一个程序，计算肿瘤内部的像素点的个数（不包括肿瘤边缘上的点）。已知肿瘤的边缘平行于图像的边缘。
 *
 * 输入
 *     只有一个测试样例。第一行有一个整数n，表示正方形图像的边长。其后n行每行有n个整数，取值为0或255。整数之间用一个空格隔开。已知n不大于1000。
 *
 * 输出
 *     输出一行，该行包含一个整数，为要求的肿瘤内的像素点的个数。
 *
 * 样例输入
 *     5
255 255 255 255 255
255 0 0 0 255
255 0 255 0 255
255 0 0 0 255
255 255 255 255 255

 *
 * 样例输出
 *     1
 *
 * 提示
 *     如果使用静态数组来表示图片数据，需要将该数组定义成全局变量。
 */
 
#include <iostream>
using namespace std;
int a[1002][1002];
int main()
{
    int n;
    cin >> n;
    int i, j;
    for (i = 1; i <= n; i++)
        for (j = 1; j <= n; j++)
            cin >> a[i][j];
    
    int flag = 0;
    int x1, y1, x2, y2;
    for (i = 1; i <= n; i++){
        for (j = 1; j <= n; j++){
            if(a[i][j]==0&& flag==0){
                x1 = i;
                y1 = j;
                flag = 1;
            }
            if(a[i][j]==0){
                x2 = i;
                y2 = j;
            }
        }
    }
    if(y2-y1>0&&x2-x1>0){
        cout << (y2-y1-1)*(x2-x1-1);
    }else{
        cout << 0;
    }

    return 0;
}